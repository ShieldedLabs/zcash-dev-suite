::

  ZIP: 2003
  Title: Disallow version 4 transactions
  Owners: Daira-Emma Hopwood <daira-emma@electriccoin.co>
  Status: Draft
  Category: Consensus
  License: MIT
  Discussions-To: <https://github.com/zcash/zips/issues/825>
  Pull-Request: <https://github.com/zcash/zips/pull/927>


Terminology
===========

The key word "MUST" in this document is to be interpreted as described in BCP 14
[#BCP14]_ when, and only when, it appears in all capitals.

The term "network upgrade" in this document is to be interpreted as described in
ZIP 200. [#zip-0200]_

The character § is used when referring to sections of the Zcash Protocol
Specification. [#protocol]_

The terms "Mainnet" and "Testnet" are to be interpreted as described in
§ 3.12 ‘Mainnet and Testnet’. [#protocol-networks]_


Abstract
========

This proposal disallows v4 transactions. The v5 transaction format introduced
in the NU5 network upgrade [#zip-0225]_ does not support Sprout, and so this
will have the effect of disabling the ability to spend Sprout funds.

It is not proposed in this ZIP to unissue, burn, or otherwise make Sprout funds
permanently unavailable. This leaves open the possibility of re-enabling v4
transactions, or of adding another facility to retrieve these funds if the Zcash
community considers it worthwhile. However, since it is possible the ability to
spend Sprout funds will never be re-enabled, holders of these funds should move
them out of the Sprout pool without delay.


Motivation
==========

Zcash is an extremely complex protocol. Some of that complexity comes from
functionality that is now obsolete.

The Sprout shielded protocol was the first large-scale deployment of
general-purpose zero-knowledge proofs, but suffered from long proving times
and high memory requirements that limited its practicality. Its successors,
the Sapling and Orchard shielded protocols, made substantial optimizations
[#cultivating-sapling]_ and added new functionality such as viewing keys and
diversified addresses. As a result, Sprout is essentially unused at this point.

In the Sapling network upgrade, the proving system and the pairing-friendly
curves used for Sprout were changed to be the same as for the Sapling shielded
protocol, i.e. Groth16 and BLS12-381. So that part of the attack surface is
shared between Sprout and Sapling. The magnitude of potential balance violation
due to any weakness in Sprout’s cryptography is also limited by the “turnstile”
mechanism defined in ZIP 209 [#zip-0209]_.

Nevertheless, the parts of Sprout that are not shared with Sapling, such as the
JoinSplit circuit and the handling of Sprout nullifiers and note commitments,
still impose a substantial burden on the complexity and attack surface of the
Zcash protocol and of full node implementations. For instance, verification of
transactions involving Sprout JoinSplit descriptions also has to be taken into
account for potential denial-of-service attacks. Because of Sprout’s lack of use,
there is little incentive for node implementations to optimize its verification,
which may lead to such attacks imposing greater cost than they otherwise would.

The deprecation of zcashd, planned to be in advance of NU7, will also remove
the only maintained software that still provides wallet functionality for Sprout,
which would in any case make it impractical to move funds out of the Sprout pool.
It is therefore necessary in any case to give holders of Sprout funds sufficient
warning that they may be unable to retrieve them after zcashd deprecation.


Requirements
============

It must become possible to remove the complexity and attack surface of Sprout
from Zcash specifications and node implementations.


Specification
=============

In § 7.1.2 ‘Transaction Consensus Rules’ [#protocol-txnconsensus]_, change the
applicability of the following rule:

  * [N​U​5 onward] The transaction version number MUST be 4 or 5. If the transaction
    version number is 4 then the version group ID MUST be ``0x892F2085``. If the
    transaction version number is 5 then the version group ID MUST be ``0x26A7270A``.

to be “[N​U​5 and NU6, pre-NU7]”, and ensure that the corresponding rule that applies
from NU7 onward does not allow version 4.

These changes apply identically to Mainnet and Testnet.

Interaction with the proposed Network Sustainability Mechanism
--------------------------------------------------------------

For clarity, the Sprout chain value pool balance as of activation of this ZIP
remains issued. If the Network Sustainability Mechanism ZIPs that affect issuance
([#zip-0233]_ and [#zip-0234]_) are also activated, then this ZIP would not cause
the Sprout chain value pool to be considered part of the “Money Reserve”.


Deployment
==========

This ZIP is proposed to be deployed with NU7.


Reference implementation
========================

TBD


Acknowledgements
================

The author would like to thank Jack Grigg and Kris Nuttycombe for discussions leading
to the submission of this ZIP, and everyone else whose work made it feasible to
deprecate Sprout. Particular credit goes to the four people who were put under a
unique kind of stress during Sapling’s development: Ariel Gabizon, Sean Bowe,
Nathan Wilcox, and Zooko Wilcox.


References
==========

.. [#BCP14] `Information on BCP 14 — "RFC 2119: Key words for use in RFCs to Indicate Requirement Levels" and "RFC 8174: Ambiguity of Uppercase vs Lowercase in RFC 2119 Key Words" <https://www.rfc-editor.org/info/bcp14>`_
.. [#protocol] `Zcash Protocol Specification, Version 2024.5.1 [NU6] or later <protocol/protocol.pdf>`_
.. [#protocol-networks] `Zcash Protocol Specification, Version 2024.5.1 [NU6]. Section 3.12: Mainnet and Testnet <protocol/protocol.pdf#networks>`_
.. [#protocol-txnconsensus] `Zcash Protocol Specification, Version 2024.5.1 [NU6]. Section 7.1.2: Transaction Consensus Rules <protocol/protocol.pdf#txnconsensus>`_
.. [#zip-0200] `ZIP 200: Network Upgrade Mechanism <zip-0200.rst>`_
.. [#zip-0209] `ZIP 209: Prohibit Negative Shielded Chain Value Pool Balances <zip-0209.rst>`_
.. [#zip-0225] `ZIP 225: Version 5 Transaction Format <zip-0225.rst>`_
.. [#zip-0233] `ZIP 233: Network Sustainability Mechanism: Burning <zip-0233.rst>`_
.. [#zip-0234] `ZIP 234: Network Sustainability Mechanism: Issuance Smoothing <zip-0234.rst>`_
.. [#cultivating-sapling] `Cultivating Sapling: Faster zk-SNARKs. Sean Bowe, September 13, 2017. <https://electriccoin.co/blog/cultivating-sapling-faster-zksnarks/>`_
